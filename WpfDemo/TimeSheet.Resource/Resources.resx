<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveTasks" xml:space="preserve">
    <value>Active Tasks</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyName2DoesntMatch" xml:space="preserve">
    <value>Company2 doesn't match with Company!</value>
  </data>
  <data name="CompanyName2IsEmpty" xml:space="preserve">
    <value>Company2's name is empty!</value>
  </data>
  <data name="CompanyNameIsEmpty" xml:space="preserve">
    <value>Company's name is empty!</value>
  </data>
  <data name="CompanyNameWrongLength" xml:space="preserve">
    <value>Company's name have to reach minimum 10 characters and also can't be more than 60!</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateCantBeInFuture" xml:space="preserve">
    <value>Record's date can't be in the future!</value>
  </data>
  <data name="DateCantBePastTheTaskCreationDate" xml:space="preserve">
    <value>Record's date can't be earlier than the date when the task was created!</value>
  </data>
  <data name="DateIsEmpty" xml:space="preserve">
    <value>Date is empty!</value>
  </data>
  <data name="Deadline" xml:space="preserve">
    <value>Deadline</value>
  </data>
  <data name="DeadlineIsEmpty" xml:space="preserve">
    <value>Deadline is empty!</value>
  </data>
  <data name="DeadlineMoreThan24Hours" xml:space="preserve">
    <value>Deadline has to be atleast more than 24 hours away from the current time!</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DoneTasks" xml:space="preserve">
    <value>Done Tasks</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="DurationCantBeHigher12Hours" xml:space="preserve">
    <value>Duration can't be higher than 12 hours!</value>
  </data>
  <data name="DurationCantBeLowerZero" xml:space="preserve">
    <value>Duration can't be lower than 0!</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email2DoesntMatch" xml:space="preserve">
    <value>Email2 doesn't match with Email!</value>
  </data>
  <data name="Email2IsEmpty" xml:space="preserve">
    <value>Email2 is empty!</value>
  </data>
  <data name="EmailIsEmpty" xml:space="preserve">
    <value>Email is empty!</value>
  </data>
  <data name="EmailIsInvalid" xml:space="preserve">
    <value>Invalid email!</value>
  </data>
  <data name="EmailWrongLength" xml:space="preserve">
    <value>Email have to reach minimum 11 characters and also can't be more than 100!</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>FirstName</value>
  </data>
  <data name="FirstNameIsEmpty" xml:space="preserve">
    <value>FirstName is empty!</value>
  </data>
  <data name="FirstNameNoNumbers" xml:space="preserve">
    <value>FirstName needs to be one word that contains only letters of the alphabet!</value>
  </data>
  <data name="FirstNameWrongLength" xml:space="preserve">
    <value>FirstName have to reach minimum 3 characters and also can't be more than 45!</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>LastName</value>
  </data>
  <data name="LastNameIsEmpty" xml:space="preserve">
    <value>LastName is empty!</value>
  </data>
  <data name="LastNameNoNumbers" xml:space="preserve">
    <value>LastName needs to be one word that contains only letters of the alphabet!</value>
  </data>
  <data name="LastNameWrongLength" xml:space="preserve">
    <value>LastName have to reach minimum 3 characters and also can't be more than 45!</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginErrorMessage" xml:space="preserve">
    <value>Invalid username or password!</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="LogoutMessage" xml:space="preserve">
    <value>Are you sure you want to logout?</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My Profile</value>
  </data>
  <data name="MyRecords" xml:space="preserve">
    <value>My Records</value>
  </data>
  <data name="MyTasks" xml:space="preserve">
    <value>My Tasks</value>
  </data>
  <data name="NeedToChooseTaskForRecord" xml:space="preserve">
    <value>Need to choose a Task for the record!</value>
  </data>
  <data name="NeedToChooseUserForTask" xml:space="preserve">
    <value>Need to choose a User for the task!</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NewTask" xml:space="preserve">
    <value>New Task</value>
  </data>
  <data name="NotificationNewTask" xml:space="preserve">
    <value>New task!</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="NotificationTaskDeadlineChanged" xml:space="preserve">
    <value>Task has been updated! Deadline has changed!</value>
  </data>
  <data name="NotificationTaskDescriptionChanged" xml:space="preserve">
    <value>Task has been updated! Description has changed!</value>
  </data>
  <data name="NotificationTaskDescriptionDeadlineChanged" xml:space="preserve">
    <value>Task has been updated! Description and Deadline has changed!</value>
  </data>
  <data name="NotificationTaskDone" xml:space="preserve">
    <value>Task has been Done!</value>
  </data>
  <data name="NotificationTaskInProgress" xml:space="preserve">
    <value>Task is InProgress!</value>
  </data>
  <data name="NotificationTaskTitleChanged" xml:space="preserve">
    <value>Task has been updated! Title has changed!</value>
  </data>
  <data name="NotificationTaskTitleDeadlineChanged" xml:space="preserve">
    <value>Task has been updated! Title and Deadline has changed!</value>
  </data>
  <data name="NotificationTaskTitleDescriptionChanged" xml:space="preserve">
    <value>Task has been updated! Title and Description has changed!</value>
  </data>
  <data name="NotificationTaskTitleDescriptionDeadlineChanged" xml:space="preserve">
    <value>Task has been updated! Title and Description and Deadline has changed!</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password2DoesntMatch" xml:space="preserve">
    <value>Password2 doesn't match with Password!</value>
  </data>
  <data name="Password2IsEmpty" xml:space="preserve">
    <value>Password2 is empty!</value>
  </data>
  <data name="PasswordIsEmpty" xml:space="preserve">
    <value>Password is empty!</value>
  </data>
  <data name="PasswordOneWord" xml:space="preserve">
    <value>Password needs to be one word!</value>
  </data>
  <data name="PasswordWrongLength" xml:space="preserve">
    <value>Password have to reach minimum 6 characters and also can't be more than 45!</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="RecordCreatedMessage" xml:space="preserve">
    <value>Record has been created succesfully!</value>
  </data>
  <data name="RecordDeletedMessage" xml:space="preserve">
    <value>Record has been deleted succesfully!</value>
  </data>
  <data name="RecordDeleteQuestion" xml:space="preserve">
    <value>Are you sure you want to delete this record?</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>Records</value>
  </data>
  <data name="RecordUpdatedMessage" xml:space="preserve">
    <value>Record has been updated succesfully!</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ServerError" xml:space="preserve">
    <value>Server error!</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusCannotBeCreatedWithRecords" xml:space="preserve">
    <value>Status cannot be "Created" when there is recods for the task!</value>
  </data>
  <data name="StatusCannotBeDoneWithNoRecords" xml:space="preserve">
    <value>Status cannot be "Done" when there is no recods for the task!</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="TaskCreatedMessage" xml:space="preserve">
    <value>Task has been created succesfully!</value>
  </data>
  <data name="TaskDeletedMessage" xml:space="preserve">
    <value>Task has been deleted succesfully!</value>
  </data>
  <data name="TaskDeleteQuestion1" xml:space="preserve">
    <value>Are you sure you want to delete </value>
  </data>
  <data name="TaskDeleteQuestion2" xml:space="preserve">
    <value> task?</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="TaskUpdatedMessage" xml:space="preserve">
    <value>Task has been updated succesfully!</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="TelephoneIsEmpty" xml:space="preserve">
    <value>Telephone is empty!</value>
  </data>
  <data name="TelephoneIsInvalid" xml:space="preserve">
    <value>Invalid telephone number!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleIsEmpty" xml:space="preserve">
    <value>Title is empty!</value>
  </data>
  <data name="TitleWrongLength" xml:space="preserve">
    <value>Title can't be more than 45 characters!</value>
  </data>
  <data name="ToDoTasks" xml:space="preserve">
    <value>ToDo Tasks</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserCreatedMessage" xml:space="preserve">
    <value>User has been created succesfully!</value>
  </data>
  <data name="UserDeletedMessage" xml:space="preserve">
    <value>User has been deleted succesfully!</value>
  </data>
  <data name="UserDeleteQuestion1" xml:space="preserve">
    <value>Are you sure you want to delete </value>
  </data>
  <data name="UserDeleteQuestion2" xml:space="preserve">
    <value> user?</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernameAlreadyExists" xml:space="preserve">
    <value> already exists!</value>
  </data>
  <data name="UsernameIsEmpty" xml:space="preserve">
    <value>Username is empty!</value>
  </data>
  <data name="UsernameOneWord" xml:space="preserve">
    <value>Username needs to be one word!</value>
  </data>
  <data name="UsernameWrongLength" xml:space="preserve">
    <value>Username have to reach minimum 6 characters and also can't be more than 45!</value>
  </data>
  <data name="UserUpdatedMessage" xml:space="preserve">
    <value>User has been updated succesfully!</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
</root>