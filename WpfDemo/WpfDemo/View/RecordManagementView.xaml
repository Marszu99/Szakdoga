<UserControl x:Class="WpfDemo.View.RecordManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfDemo"
             xmlns:view="clr-namespace:WpfDemo.View"
             xmlns:l10n="clr-namespace:TimeSheet.Resource;assembly=TimeSheet.Resource"
             mc:Ignorable="d" 
             Background="DarkGray"
             d:DesignWidth="1510" d:DesignHeight="690">

    <Grid Width="1510">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="910"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!--<RowDefinition Height="35"/>-->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0 5">
                <Button x:Name="NewRecordButton" Command="{Binding CreateRecordCommand}" Grid.Column="0" 
                        Grid.Row="0" Margin="10 0 0 0" Padding="6 0" BorderThickness="1" BorderBrush="Black" Cursor="Hand"
                        ToolTip="{local:ResxStatic l10n:Resources.CreateNewRecord}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\create-record.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <Button x:Name="ExportExcelButton" Command="{Binding ExportToExcelCommand}" Grid.Column="0" Grid.Row="0" 
                        Margin="10 0 0 0" Padding="6 0" BorderThickness="1" BorderBrush="Black" Cursor="Hand" ToolTip="{local:ResxStatic l10n:Resources.ExportToExcel}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\excel.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <TextBlock Text="{local:ResxStatic l10n:Resources.My}" Margin="15 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="17" Visibility="{Binding RecordCheckBoxAndTextVisibility}"/>
                <CheckBox x:Name="ShowingMyRecordsCheckBox" Command="{Binding SortingByCheckBoxCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          Width="15" Height="15" IsChecked="{Binding IsMyRecordsCheckBoxChecked}" Margin="2 0 0 0" Padding="0" BorderThickness="0.5" 
                          BorderBrush="Black" Cursor="Hand" Visibility="{Binding RecordCheckBoxAndTextVisibility}"
                          ToolTip="{local:ResxStatic l10n:Resources.MyRecordsCheckBoxMessage}">
                    <CheckBox.LayoutTransform>
                        <ScaleTransform ScaleX="1.8" ScaleY="1.8" />
                    </CheckBox.LayoutTransform>
                    <CheckBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="1"/>
                        </Style>
                    </CheckBox.Resources>
                </CheckBox>
            </StackPanel>

            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 5 0 5">
                <DatePicker SelectedDate="{Binding DateFrom, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                            SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}"><!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type DatePicker}">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <TextBlock Text="-" Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20"/>
                <DatePicker SelectedDate="{Binding DateTo, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                            SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0 0 10 0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}"><!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type DatePicker}">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>

                <TextBox Text="{Binding DurationFromFormat, UpdateSourceTrigger=LostFocus}" Background="#eee" Width="55" FontSize="19" Margin="0" Padding="0 -1 0 0"
                         HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBlock Text="-" Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20"/>
                <TextBox Text="{Binding DurationToFormat, UpdateSourceTrigger=LostFocus}" Background="#eee" Width="55" FontSize="19" Margin="0 0 5 0 " Padding="0 -1 0 0"
                         HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>

                <!--<TextBlock Text="{local:ResxStatic l10n:Resources.Search}" Margin="0" VerticalAlignment="Center"
                        HorizontalAlignment="Left" FontSize="20"/>-->
                <TextBox Text="{Binding SearchValue, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SearchTextBoxWithWaterMarkStyle}" Margin="5 0 0 0" Background="#eee"
                         Width="165" Height="25" FontSize="18" VerticalAlignment="Center" HorizontalContentAlignment="Left" BorderThickness="1 1 0 1" BorderBrush="Black" 
                         Padding="2 0 0 1" Tag="{local:ResxStatic l10n:Resources.Search}" Cursor="IBeam">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4 0 0 4"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchingCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Command="{Binding SearchingCommand}" Style="{DynamicResource SearchButtonStyle}" BorderThickness="0 1 1 1" BorderBrush="Black" Cursor="Hand"
                        ToolTip="{local:ResxStatic l10n:Resources.SearchButtonMessage}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\search.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="0 4 4 0"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <Button x:Name="ResetListRecordsButton" Command="{Binding ResetRecordListCommand}" Grid.Column="0" Grid.Row="0" 
                        Margin="5 0 0 0" BorderThickness="1" BorderBrush="Black" Cursor="Hand" ToolTip="{local:ResxStatic l10n:Resources.ResetList}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\reset.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>

            <view:ListRecordsView x:Name="ListRecordsContent" Grid.Row="1" Margin="10 0 0 0" BorderBrush="Black" BorderThickness="1"/>
        </Grid>

        <view:RecordView Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Padding="0 5 0 0" Margin="0 0 16 0" 
                         Visibility="{Binding SelectedRecordVisibility}"/>
    </Grid>

    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--<Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="SearchTextBoxWithWaterMarkStyle" TargetType="{x:Type TextBox}">
            <!--https://code.4noobz.net/wpf-add-a-watermark-to-a-native-wpf-textbox/-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center" />
                            <Label Margin="2 0 2 1" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                                   Visibility="Collapsed" Foreground="Gray" Padding="1 0 0 0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
</UserControl>
