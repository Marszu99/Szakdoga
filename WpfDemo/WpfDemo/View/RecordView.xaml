<UserControl x:Class="WpfDemo.View.RecordView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfDemo"
             xmlns:l10n="clr-namespace:TimeSheet.Resource;assembly=TimeSheet.Resource"
             mc:Ignorable="d" 
             Height="665" Width="540" Background="LightGray" BorderBrush="Black" BorderThickness="1"
             Name="RecordViewUserControl">

    <Grid Margin="0 0 0 0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1.7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding SelectedRecord.RecordViewUserRowHeight}"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="{local:ResxStatic l10n:Resources.User}" Grid.Column="0" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Right"
                   VerticalAlignment="Center" Margin="0 0 8 0" FontSize="32"/>
        <TextBlock Text="{local:ResxStatic l10n:Resources.Task}" Grid.Column="0" Grid.Row="1" FontWeight="Bold" HorizontalAlignment="Right"
                   VerticalAlignment="Center" Margin="0 0 8 0" FontSize="32"/>
        <TextBlock Text="{local:ResxStatic l10n:Resources.Date}" Grid.Column="0" Grid.Row="2" FontWeight="Bold" HorizontalAlignment="Right" 
                   VerticalAlignment="Center" Margin="0 0 8 20" FontSize="32"/>
        <TextBlock Text="{local:ResxStatic l10n:Resources.Duration}" Grid.Column="0" Grid.Row="3" FontWeight="Bold" HorizontalAlignment="Right" 
                   VerticalAlignment="Center" Margin="0 0 8 40" FontSize="32"/>
        <TextBlock Text="{local:ResxStatic l10n:Resources.Comment}" Grid.Column="0" Grid.Row="4" FontWeight="Bold" HorizontalAlignment="Right" 
                   VerticalAlignment="Top" Margin="0 0 8 0" FontSize="32"/>

        <TextBox Text="{Binding SelectedRecord.User_Username, Mode=OneWay}" Grid.Row="0" Grid.Column="1" Background="#FFC7C7C7" Height="37" 
                 FontSize="26" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Margin="0 2 0 0" Padding="2 0" IsReadOnly="True" 
                 BorderThickness="1" BorderBrush="Black" Visibility="{Binding SelectedRecord.RecordViewUserTextBoxVisibility}" 
                 Style="{DynamicResource TextBoxReadOnlyStyle}"/>

        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
            <ComboBox x:Name="CreateRecordTask" ItemsSource="{Binding SelectedRecord.ActiveTasks, UpdateSourceTrigger=PropertyChanged}" Padding="2 0" 
                      Margin="0 2 0 0" Background="#eee" Width="250" Height="40" FontSize="26" HorizontalContentAlignment="Left"
                      SelectedItem="{Binding SelectedRecord.Task, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                      ToolTipService.ToolTip="{Binding SelectedRecord.ErrorCollection[Task]}" Style="{DynamicResource theComboBox}"
                      Visibility="{Binding SelectedRecord.RecordViewTaskComboBoxVisibility}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Title}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.Resources>
                    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Resources>
            </ComboBox>

            <TextBox Text="{Binding SelectedRecord.Task.Title}" Background="#FFC7C7C7" Height="37" FontSize="26"
                     HorizontalAlignment="Left" HorizontalContentAlignment="Left" Margin="0 2 0 0" Padding="2 0" IsReadOnly="True" BorderThickness="1" 
                     BorderBrush="Black" Visibility="{Binding SelectedRecord.RecordViewTaskTextboxVisibility}" Style="{DynamicResource TextBoxReadOnlyStyle}"/>

            <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\error.png" 
                   Visibility="{Binding SelectedRecord.TaskErrorIconVisibility}" Width="75" Height="75"/>
        </StackPanel>


        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" Margin="0 0 0 20">
            <DatePicker x:Name="CreateRecordDate" SelectedDate="{Binding SelectedRecord.Date, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                        SelectedDateFormat="Short" Background="#eee" Height="38" Width="165" FontSize="26" Padding="3,2" FirstDayOfWeek="Monday" Margin="0 2 0 0"
                        Visibility="{Binding SelectedRecord.RecordViewDateDatePickerVisibility}" 
                        ToolTipService.ToolTip="{Binding SelectedRecord.ErrorCollection[Date]}">
                <DatePicker.Resources>
                    <Style TargetType="{x:Type DatePickerTextBox}">
                        <!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                    <Grid>
                                        <Grid x:Name="WatermarkContent" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type DatePicker}">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                <!--#FF7EB4EA-->
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- <Style x:Key="{x:Type CalendarDayButton}" TargetType="{x:Type CalendarDayButton}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="{x:Type CalendarItem}" TargetType="{x:Type CalendarItem}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>-->
                    <!--<Style x:Key="{x:Type CalendarItem}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>-->
                </DatePicker.Resources>
                <!--<DatePicker.CalendarStyle>
                    <Style TargetType="{x:Type Calendar}">
                        <Style.Triggers>
                            <Trigger Property="CalendarItem.IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DatePicker.CalendarStyle>-->
            </DatePicker>

            <TextBox Text="{Binding SelectedRecord.Date, StringFormat='yyyy.MM.dd'}" Background="#FFC7C7C7" Height="36" 
                     FontSize="26" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Margin="0 2 0 0" Padding="2 0" IsReadOnly="True" BorderThickness="1" 
                     BorderBrush="Black" Visibility="{Binding SelectedRecord.RecordViewDateTextBoxVisibility}" Style="{DynamicResource TextBoxReadOnlyStyle}"/>

            <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\error.png"
                   Visibility="{Binding SelectedRecord.DateErrorIconVisibility}" Width="70" Height="70"/>
        </StackPanel>


        <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal" Margin="0 0 0 40">
            <TextBox x:Name="CreateRecordDuration" Text="{Binding SelectedRecord.DurationFormat, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}"
                     Background="{Binding SelectedRecord.RecordViewDurationCommentBackground}" Width="75" Height="36" FontSize="26" Margin="0 2 0 0"
                     HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black" IsReadOnly="{Binding SelectedRecord.IsRecordViewValuesReadOnly}"
                     ToolTipService.ToolTip="{Binding SelectedRecord.ErrorCollection[DurationFormat]}" Style="{DynamicResource TextBoxReadOnlyStyle}">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>

            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="10 0 0 0" Width="25" Height="40">
                <Button x:Name="DurationAddButtton" Command="{Binding SelectedRecord.DurationAddCommand}" Width="25" Height="15"
                        Margin="0 5 0 0" BorderThickness="0" Cursor="Hand" Padding="0" Background="Transparent"
                        Visibility="{Binding SelectedRecord.RecordViewButtonsVisibility}" Style="{DynamicResource Add10MinToDurationButtonStyle}"
                        ToolTip="{local:ResxStatic l10n:Resources.Add10MinToDuration}">
                </Button>
                <Button x:Name="DurationReduceButtton" Command="{Binding SelectedRecord.DurationReduceCommand}" Width="25" Height="15"
                        Margin="0 5 0 0" BorderThickness="0" Cursor="Hand" Padding="0" Background="Transparent"
                        Visibility="{Binding SelectedRecord.RecordViewButtonsVisibility}" Style="{DynamicResource Subtract10MinFromDurationButtonStyle}"
                        ToolTip="{local:ResxStatic l10n:Resources.Subtract10MinFromDuration}">
                </Button>
            </StackPanel>

            <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\error.png"
                   Visibility="{Binding SelectedRecord.DurationErrorIconVisibility}" Width="70" Height="70"/>
        </StackPanel>


        <TextBox x:Name="CreateRecordComment" Text="{Binding SelectedRecord.Comment, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="4"
                 Background="{Binding SelectedRecord.RecordViewDurationCommentBackground}" Margin="0 4 20 0" Padding="2,1" BorderThickness="1" BorderBrush="Black"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="26" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" 
                 IsReadOnly="{Binding SelectedRecord.IsRecordViewValuesReadOnly}" Style="{DynamicResource TextBoxReadOnlyStyle}">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </TextBox.Resources>
        </TextBox>


        <StackPanel Grid.Column="1" Grid.Row="5" Orientation="Horizontal">
            <Button x:Name="CreateRecordButton" Content="{local:ResxStatic l10n:Resources.Save}" Command="{Binding SelectedRecord.SaveCommand}"
                    Height="42" Margin="0" Padding="6 3" FontSize="24" BorderThickness="1" BorderBrush="Black" Cursor="Hand" Background="#FF66B2FD"
                    Visibility="{Binding SelectedRecord.RecordViewButtonsVisibility}"><!--FF7FE468-->
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Button.Resources>
            </Button>

            <Button x:Name="CancelCreateRecordButton" Content="{local:ResxStatic l10n:Resources.Cancel}" Command="{Binding SelectedRecord.CancelRecordViewCommand}"
                    Height="42" Margin="30 0 0 0" Padding="6 3" FontSize="24" BorderThickness="1" BorderBrush="Black" Cursor="Hand" Background="#FF66B2FD"><!--FFF77575-->
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Button.Resources>
            </Button>
        </StackPanel>
    </Grid>

    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding SelectedRecord.SaveCommand}"/>
    </UserControl.InputBindings>

    <UserControl.Resources>
        <!--https://stackoverflow.com/questions/17727879/how-to-change-the-cornerradius-of-the-combobox-wpf-->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="1" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"    
                                Fill="{TemplateBinding Foreground}"
                                Stroke="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers><!--A ControlTemplate.Triggers-ben levo dolgok: https://social.msdn.microsoft.com/Forums/vstudio/en-US/dd893f6e-720f-49ef-827d-78b1d20d660a/change-mouseover-effect-of-combobox?forum=wpf-->
                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                <!--<Setter TargetName="Border" Property="Background" Value="#FFBEE6FD"/>-->
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF3C7FB1"/><!--#FF7EB4EA-->
                                <Setter TargetName="Arrow" Property="Fill" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <!--<Setter TargetName="Border" Property="Background" Value="#FFBEE6FD"/>-->
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF3C7FB1"/> <!--#FF7EB4EA-->
                                <Setter TargetName="Arrow" Property="Fill" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Cursor="Hand"
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                            <ContentPresenter
                                    Name="ContentSite"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="10,3,30,3"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"               
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                    CornerRadius="4"
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="#F6F6F6"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- AddDuration, ReduceDuration gomb style beallitasa, h mindene transparent legyen minden esetben-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Add10MinToDurationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Path x:Name="ArrowUpPath" Fill="Black" Stretch="Fill" Data="M 0 6 L 12 6 L 6 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowUpPath" Property="Fill" Value="DeepSkyBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowUpPath" Property="Fill" Value="DeepSkyBlue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowUpPath" Property="Fill" Value="#FFF4F4F4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Subtract10MinFromDurationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Path x:Name="ArrowDownPath" Fill="Black" Stretch="Fill" Data="M 0 0 L 6 6 L 12 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowDownPath" Property="Fill" Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowDownPath" Property="Fill" Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="grid" Value="Transparent"/>
                                <Setter TargetName="ArrowDownPath" Property="Fill" Value="#FFF4F4F4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBox ReadOnly="true" eseten nem valtozik meg BorderBrush szine ha folemesz vagy belekattintasz-->
        <Style x:Key="TextBoxReadOnlyStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

</UserControl>
