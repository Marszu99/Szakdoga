<Window x:Class="WpfDemo.View.UserProfileView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfDemo"
        xmlns:l10n="clr-namespace:TimeSheet.Resource;assembly=TimeSheet.Resource"
        mc:Ignorable="d"
        Title="UserProfile" Width="1550" Height="870" Background="DarkGray"
        WindowStartupLocation="Manual" ResizeMode="CanMinimize"
        Left="-8" Top="0"
        Icon="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\WR.png">

    <Grid Margin="10 0 10 5">
        <Grid.RowDefinitions>
            <RowDefinition Height="1.3*"/>
            <RowDefinition Height="0.3*"/>
            <RowDefinition Height="2.5*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold" FontFamily="Verdana" FontSize="38" HorizontalAlignment="Center" VerticalAlignment="Top" 
                       Margin="0 6 0 0">
                <Run Text="{Binding CurrentUser.Username, UpdateSourceTrigger=PropertyChanged}"/>
                <Run Text="{local:ResxStatic l10n:Resources.UsernameProfile}"/>
            </TextBlock>
            
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{local:ResxStatic l10n:Resources.UsernameWithColon}" Grid.Row="0" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Left" 
                           VerticalAlignment="Top" Margin="10 80 0 0" FontSize="33"/>
                <Label x:Name="userNameLabel" Grid.Row="0" Grid.Column="0" FontSize="30" Content="{Binding CurrentUser.Username, UpdateSourceTrigger=PropertyChanged}"
                       Margin="0 79.5 0 0" HorizontalContentAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <!--local:ResxStatic l10n:Resources.FirstNameWithColon,Binding FirstNameString, StringFormat='{}{0}:'-->
                <TextBlock Text="{local:ResxStatic l10n:Resources.FirstNameWithColon}" Grid.Row="0" Grid.Column="1" FontWeight="Bold" HorizontalAlignment="Left" 
                           VerticalAlignment="Top" Margin="10 80 0 0" FontSize="33"/>
                <Label x:Name="firstNameLabel" Grid.Row="0" Grid.Column="1" FontSize="30" Content="{Binding CurrentUser.FirstName, UpdateSourceTrigger=PropertyChanged}"
                       Margin="0 79 0 0" HorizontalContentAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="2">
                <TextBlock Text="{local:ResxStatic l10n:Resources.LastNameWithColon}" Grid.Row="0" Grid.Column="2" FontWeight="Bold" HorizontalAlignment="Left"
                           VerticalAlignment="Top" Margin="0 80 0 0" FontSize="33"/>
                <Label x:Name="lastNameLabel" Grid.Row="0" Grid.Column="2" FontSize="28" Content="{Binding CurrentUser.LastName, UpdateSourceTrigger=PropertyChanged}"
                       Margin="0 81 0 0" HorizontalContentAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="0">
                <TextBlock Text="{local:ResxStatic l10n:Resources.EmailWithColon}" Grid.Row="0" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10 0 0 50" FontSize="33"/>
                <Label x:Name="emailLabel" Grid.Row="0" Grid.Column="0" FontSize="30" Content="{Binding CurrentUser.Email, UpdateSourceTrigger=PropertyChanged}"
                       Margin="0 0 0 45" HorizontalContentAlignment="Left" VerticalAlignment="Bottom"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <TextBlock Text="{local:ResxStatic l10n:Resources.TelephoneWithColon}" Grid.Row="0" Grid.Column="1" FontWeight="Bold" HorizontalAlignment="Left"
                           VerticalAlignment="Bottom" Margin="10 0 0 50" FontSize="33"/>
                <Label x:Name="telephoneLabel" Grid.Row="0" Grid.Column="1" FontSize="30" Content="{Binding CurrentUser.Telephone, UpdateSourceTrigger=PropertyChanged}"
                       Margin="0 0 0 45" HorizontalContentAlignment="Left" VerticalAlignment="Bottom"/>
            </StackPanel>
        </Grid>
        

        <Grid Grid.Row="1">
            <!--
            <Label Grid.Row="1" FontWeight="Bold" FontSize="26" Content="{local:ResxStatic l10n:Resources.Tasks}" Margin="0 0 0 -5" HorizontalAlignment="Left" 
                   VerticalAlignment="Bottom"/>
            <Label Grid.Row="1" FontWeight="Bold" FontSize="26" Content="{local:ResxStatic l10n:Resources.Records}" Margin="795 0 0 -5" HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"/>-->
            <StackPanel Orientation="Horizontal" Margin="7 0 0 0">
                <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\tasks.png" VerticalAlignment="Bottom" Margin="0 0 0 1" Width="39"/>
                <Label Content="{local:ResxStatic l10n:Resources.Tasks}" FontWeight="Bold" FontSize="34" Margin="-7 20 0 0" Height="50" FontFamily="Constantia"/>
            </StackPanel>

            <StackPanel Margin="0 0 807 1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal" Height="27">
                <DatePicker SelectedDate="{Binding DeadlineFrom, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                            SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}"><!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type DatePicker}">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <TextBlock Text="-" Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20"/>
                <DatePicker SelectedDate="{Binding DeadlineTo, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                            SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0 0 5 0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}"><!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type DatePicker}">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                
                <TextBox Text="{Binding SearchTaskListValue, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SearchTextBoxWithWaterMarkStyle}" Margin="0 0 0 1" 
                         Background="#eee" Width="140" FontSize="18" HorizontalContentAlignment="Left" BorderThickness="1 1 0 1" BorderBrush="Black" 
                         Padding="2 0 0 1" Tag="{local:ResxStatic l10n:Resources.Search}" Cursor="IBeam">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4 0 0 4"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchingTaskListCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Command="{Binding SearchingTaskListCommand}" Style="{DynamicResource SearchButtonStyle}" BorderThickness="0 1 1 1" BorderBrush="Black" Cursor="Hand"
                        Margin="0 0 0 1" ToolTip="{local:ResxStatic l10n:Resources.SearchButtonMessage}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\search.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="0 4 4 0"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button Command="{Binding ResetTaskListCommand}" BorderThickness="1" BorderBrush="Black" Cursor="Hand" Margin="5 0 0 1"
                        ToolTip="{local:ResxStatic l10n:Resources.ResetList}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\reset.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>


            <StackPanel Orientation="Horizontal" Margin="822 0 0 -5">
                <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\record.png" VerticalAlignment="Bottom" Margin="0 0 0 4" Width="41"/>
                <Label Content="{local:ResxStatic l10n:Resources.Records}" FontWeight="Bold" FontSize="34" Margin="-7 20 0 0" FontFamily="Constantia"/>
            </StackPanel>

            <StackPanel Margin="0 0 3 1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
                <StackPanel Orientation="Vertical">
                    <DatePicker SelectedDate="{Binding DateFrom, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                                SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                        <DatePicker.Resources>
                            <Style TargetType="{x:Type DatePickerTextBox}">
                                <!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                            <Grid>
                                                <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type DatePicker}">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                    <DatePicker SelectedDate="{Binding DateTo, UpdateSourceTrigger=PropertyChanged}" Background="#eee"
                                SelectedDateFormat="Short" Width="120" Height="25" FontSize="18" Margin="0 3 0 0" Padding="2 0 0 0" FirstDayOfWeek="Monday">
                        <DatePicker.Resources>
                            <Style TargetType="{x:Type DatePickerTextBox}">
                                <!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/77e907cc-e949-4a37-b633-06337acddb7f/how-to-remove-datepicker-inner-border?forum=wpf-->
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate x:Name="dptext" TargetType="{x:Type DatePickerTextBox}">
                                            <Grid>
                                                <Grid x:Name="WatermarkContent" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="0" 
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type DatePicker}">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="5 0 5 0">
                    <TextBox Text="{Binding DurationFromFormat, UpdateSourceTrigger=LostFocus}" Background="#eee" Width="55" FontSize="19" Margin="0 0 0 1" Padding="0 -1 0 0"
                             HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black" Height="25">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <TextBox Text="{Binding DurationToFormat, UpdateSourceTrigger=LostFocus}" Background="#eee" Width="55" FontSize="19" Margin="0 2 0 1 " Padding="0 -1 0 0"
                             HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black" Height="25">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                </StackPanel>

                <TextBox Text="{Binding SearchRecordListValue, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SearchTextBoxWithWaterMarkStyle}" Margin="0 0 0 1" Background="#eee" 
                         Width="140" Height="27" FontSize="18" HorizontalContentAlignment="Left" VerticalAlignment="Bottom" BorderThickness="1 1 0 1" BorderBrush="Black" 
                         Padding="2 0 0 1" Tag="{local:ResxStatic l10n:Resources.Search}" Cursor="IBeam">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4 0 0 4"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchingRecordListCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Command="{Binding SearchingRecordListCommand}" Style="{DynamicResource SearchButtonStyle}" Height="27" VerticalAlignment="Bottom" 
                        BorderThickness="0 1 1 1" BorderBrush="Black" Cursor="Hand" Margin="0 0 0 1" ToolTip="{local:ResxStatic l10n:Resources.SearchButtonMessage}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\search.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="0 4 4 0"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button Command="{Binding ResetRecordListCommand}" Height="27" VerticalAlignment="Bottom" BorderThickness="1" BorderBrush="Black" Cursor="Hand" 
                        Margin="5 0 0 1" ToolTip="{local:ResxStatic l10n:Resources.ResetList}">
                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\reset.png"/>
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>
        </Grid>



        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <!--<ColumnDefinition Width="622*"/>
                <ColumnDefinition Width="107*"/>
                <ColumnDefinition Width="73*"/>
                <ColumnDefinition Width="730*"/>-->
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="AddTaskToUserTaskButton" Command="{Binding ShowTaskCommand}" Grid.Row="2" Grid.Column="1"
                    Margin="9 2.5 0 0" Padding="5 0" Height="32" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalAlignment="Top"
                    BorderThickness="1" BorderBrush="Black" Cursor="Hand" Visibility="{Binding AddTaskButtonVisibility}"
                    ToolTip="{local:ResxStatic l10n:Resources.CreateNewTask}"><!--FontSize="20"-->
                <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\create-task.png"/>
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Button.Resources>
            </Button>
            
            <DataGrid x:Name="UserTasksDataGrid" x:FieldModifier="public" ItemsSource="{Binding TaskList}" SelectedItem="{Binding SelectedTask}" 
                      HorizontalAlignment="Left" Width="710" AutoGenerateColumns="False" ColumnWidth="*" Background="LightGray" BorderBrush="Black"
                      BorderThickness="1" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" Cursor="Hand" CanUserAddRows="False" IsReadOnly="True" FontSize="20" 
                      Grid.Column="0" Grid.ColumnSpan="2" RowHeight="30" Foreground="Black">

                <DataGrid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding ShowTaskCommand}"/>
                    <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
                </DataGrid.InputBindings>

                <DataGrid.ContextMenu>
                    <ContextMenu Visibility="{Binding UserProfileViewTasksContextMenuVisibility}">
                        <MenuItem Command="{Binding DeleteCommand}" Cursor="Hand" Padding="5 0" Style="{DynamicResource PopupMenuItem}">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="C:\Marci\Egyetem\BLB-Soft\Szakdoga\Szakdoga\WpfDemo\WpfDemo\Components\delete.png" Width="20" Margin="5 0"/>
                                    <TextBlock Text="{local:ResxStatic l10n:Resources.Delete}" FontSize="19" Margin="1 0 3 0"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#eee"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Title}" Binding="{Binding Title}" Width="160">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Description}" Binding="{Binding Description}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Deadline}" Binding="{Binding Deadline, StringFormat='yyyy.MM.dd'}" Width="105">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Status}" Binding="{Binding TaskStatusString}" Width="120">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>


            <DataGrid x:Name="UserRecordsDataGrid" x:FieldModifier="public" ItemsSource="{Binding RecordList}" AutoGenerateColumns="False" Background="LightGray" 
                      Width="696" HorizontalAlignment="Left" BorderBrush="Black" BorderThickness="1" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" Cursor="Hand" CanUserAddRows="False" IsReadOnly="True" Grid.Column="2" FontSize="20" 
                      Grid.ColumnSpan="2" Margin="5 0 0 0" RowHeight="30" Foreground="Black">

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#eee"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Task}" Binding="{Binding Task.Title}" Width="160">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Date}" Binding="{Binding Date, StringFormat='yyyy.MM.dd'}" Width="105">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Duration}" Binding="{Binding DurationFormat}" Width="Auto">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{local:ResxStatic l10n:Resources.Comment}" Binding="{Binding Comment}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </Grid>

    <Window.Resources>
        <!---MenuItem.Icon helyenek eltuntetese ContextMenu eseten https://social.msdn.microsoft.com/Forums/en-US/7b28248e-0623-4b2c-9ed0-3f0670329d59/c-xaml-removing-the-icon-strip-from-the-contextmenu?forum=wpf-->
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}" x:Key="PopupMenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" Background="#eee">
                            <ContentPresenter ContentSource="Header"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Icon" Value="{x:Null}"/>
                            <Trigger Property="IsChecked" Value="True"/>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SearchTextBoxWithWaterMarkStyle" TargetType="{x:Type TextBox}">
            <!--https://code.4noobz.net/wpf-add-a-watermark-to-a-native-wpf-textbox/-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center" />
                            <Label Margin="2 0 2 1" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                                   Visibility="Collapsed" Foreground="Gray" Padding="1 0 0 0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>
